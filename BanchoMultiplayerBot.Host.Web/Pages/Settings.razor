@implements IDisposable
@inject BotService Bot
@inject IDialogService DialogService
@page "/settings"
@using BanchoMultiplayerBot
@using BanchoMultiplayerBot.Config
@using BanchoMultiplayerBot.Data

<PageTitle>Settings</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Settings</MudText>

<MudForm @ref="_form">
    <MudGrid>
        <MudItem xs="6">
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">IRC Authentication</MudText>
                <MudTextField @bind-Value="_configuration.Username" T="string" Label="Username" Required="true" RequiredError="Username is required!" Variant="Variant.Filled"/>
                <MudTextField @bind-Value="_configuration.Password" T="string" Label="Password" Required="true" RequiredError="Password is required!" InputType="InputType.Password" Variant="Variant.Filled"/>
                <MudTooltip Text="If unsure, leave unchecked.">
                    <MudSwitch @bind-Checked="_configuration.IsBotAccount" Label="Is bot account" Color="Color.Primary" />
                </MudTooltip>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">osu! API</MudText>
                <MudTextField @bind-Value="_configuration.ApiKey" T="string" Label="API Key" Required="true" RequiredError="API key is required!" InputType="InputType.Password" Variant="Variant.Filled"/>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">Webhook Notifications</MudText>
                <MudSwitch @bind-Checked="_configuration.EnableWebhookNotifications" Label="Enable" Color="Color.Primary" />
                <MudTextField @bind-Value="_configuration.WebhookUrl" T="string" Label="Webhook URL" Variant="Variant.Filled" />
                <MudSwitch @bind-Checked="_configuration.WebhookNotifyConnectionErrors" Label="Notify on osu!bancho connection issues" Color="Color.Primary" />
                <MudSwitch @bind-Checked="_configuration.WebhookNotifyLobbyTerminations" Label="Notify when managed lobbies gets removed" Color="Color.Primary" />
            </MudPaper>
            <MudText Typo="Typo.body2" GutterBottom="true" Class="ml-2">Bot Version: @BanchoMultiplayerBot.Bot.Version</MudText>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">General</MudText>
                <MudSwitch @bind-Checked="_configuration.AutoStartAllPlayersReady" Label="Auto-start when all players are ready" Color="Color.Primary"/>
                <MudSwitch @bind-Checked="_configuration.EnableAutoStartTimer" Label="Automatically start auto-start timer" Color="Color.Primary"/>
                <MudNumericField @bind-Value="_configuration.AutoStartTimerTime" Label="Auto-start timer (s)" Variant="Variant.Filled" Min="10" Max="600" />
            </MudPaper>
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">Announcements</MudText>
                <MudTable Class="pa-0 ma-2" Items="@Bot.AnnouncementManager.Announcements" Hover="true" Breakpoint="Breakpoint.Sm">
                        <ColGroup>
                            <col style="width: 50%;" />
                            <col style="width: 40px;" />
                            <col style="width: 120px;" />
                        </ColGroup>
                        <HeaderContent>
                            <MudTh>Message</MudTh>
                            <MudTh>Frequency</MudTh>
                            <MudTh>Options</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Message">@context.Message</MudTd>
                            <MudTd DataLabel="Frquency">@context.Frequency</MudTd>
                        <MudTd DataLabel="Options"><MudIconButton Icon="@Icons.Material.Filled.Settings" Title="Configure" OnClick="(() => OnConfigureAnnouncementPressed(context))" /><MudIconButton Icon="@Icons.Material.Filled.Delete" Title="Remove" OnClick="(() => OnRemoveAnnouncementPressed(context))" /></MudTd>
                        </RowTemplate>
                    </MudTable>
                    <MudPaper Class="pa-0 ma-2" Elevation="0">
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@OnAddAnnouncementPressed">Add New</MudButton>
                    </MudPaper>
            </MudPaper>

        </MudItem>
    </MudGrid>
</MudForm>

@code {
    private MudForm? _form;
    private BotConfiguration _configuration = null!;

    private async Task OnConfigureAnnouncementPressed(Announcement announcement)
    {
        var announcementCopy = new Announcement()
        {
            Message = announcement.Message,
            Frequency = announcement.Frequency,
        };

        var parameters = new DialogParameters { ["Announcement"] = announcementCopy };

        var dialog = DialogService.Show<CreateConfigureAnnouncement>("ConfigureAnnouncement", parameters);
        var result = await dialog.Result;

        if (result.Cancelled)
            return;

        announcement.Message = announcementCopy.Message;
        announcement.Frequency = announcementCopy.Frequency;
    }

    private void OnRemoveAnnouncementPressed(Announcement announcement)
    {
        Bot.AnnouncementManager.Announcements.Remove(announcement);
    }

    private async Task OnAddAnnouncementPressed()
    {
        var newAnnouncement = new Announcement();

        var parameters = new DialogParameters { ["Announcement"] = newAnnouncement };

        var dialog = DialogService.Show<CreateConfigureAnnouncement>("NewAnnouncement", parameters);
        var result = await dialog.Result;

        if (result.Cancelled)
            return;

        newAnnouncement.LastSent = DateTime.Now;        

        Bot.AnnouncementManager.Announcements.Add(newAnnouncement);
    }

    protected override void OnInitialized()
    {
        _configuration = Bot.Configuration;
    }

    public void Dispose()
    {
    }
}