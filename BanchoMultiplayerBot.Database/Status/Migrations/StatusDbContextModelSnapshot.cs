// <auto-generated />
using System;
using BanchoMultiplayerBot.Database.Status;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BanchoMultiplayerBot.Database.Status.Migrations
{
    [DbContext(typeof(StatusDbContext))]
    partial class StatusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("BanchoMultiplayerBot.Database.Status.Models.BotSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ApiErrorCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiLookups")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageErrorCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesReceived")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesSent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerformancePointCalculationErrors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerformancePointCalculations")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BotSnapshots");
                });

            modelBuilder.Entity("BanchoMultiplayerBot.Database.Status.Models.LobbySnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BotLobbyIndex")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("BotSnapshotId")
                        .HasColumnType("TEXT");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostViolations")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Players")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BotSnapshotId");

                    b.ToTable("LobbySnapshot");
                });

            modelBuilder.Entity("BanchoMultiplayerBot.Database.Status.Models.StatusSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("SuccessfulStatusCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StatusSnapshots");
                });

            modelBuilder.Entity("BanchoMultiplayerBot.Database.Status.Models.LobbySnapshot", b =>
                {
                    b.HasOne("BanchoMultiplayerBot.Database.Status.Models.BotSnapshot", null)
                        .WithMany("LobbySnapshots")
                        .HasForeignKey("BotSnapshotId");
                });

            modelBuilder.Entity("BanchoMultiplayerBot.Database.Status.Models.BotSnapshot", b =>
                {
                    b.Navigation("LobbySnapshots");
                });
#pragma warning restore 612, 618
        }
    }
}
